const puppeteer = require('puppeteer');
const fs = require('fs-extra');
const path = require('path');
const { createObjectCsvWriter } = require('csv-writer');

const queries = [
    "–∑–∞—â–∏—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç ddos",
    "–º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –æ—Ç ddos",
    "—Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã ddos",
    "–º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –æ—Ç ddos –∞—Ç–∞–∫",
    "ddos –∞—Ç–∞–∫–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã"
];

const resultsDir = path.join(__dirname, 'Results');
if (!fs.existsSync(resultsDir)) {
    fs.mkdirSync(resultsDir);
}

const csvFilePath = path.join(resultsDir, 'commercial_analysis.csv');
const csvWriter = createObjectCsvWriter({
    path: csvFilePath,
    header: [
        { id: 'query', title: '–ó–∞–ø—Ä–æ—Å' },
        { id: 'commercialPages', title: '–ö–æ–ª-–≤–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü' },
        { id: 'commercialRate', title: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ (%)' },
        { id: 'category', title: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' }
    ]
});

(async () => {
    const browser = await puppeteer.launch({
        headless: false,
        args: ['--incognito']
    });

    const page = await browser.newPage();

    let results = [];

    for (const query of queries) {
        console.log(`üîç –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–∞: ${query}`);
        
        await page.goto(`https://www.google.com/search?q=${encodeURIComponent(query)}`, { waitUntil: 'domcontentloaded' });

        // **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–∞–ø—á—É**
        const isCaptcha = await page.evaluate(() => {
            return document.body.innerText.includes("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç") ||
                   document.querySelector('iframe[src*="recaptcha"]') !== null;
        });

        if (isCaptcha) {
            console.log(`‚ùå –ö–∞–ø—á–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞! –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.`);
            await browser.close();
            return;
        }

        const searchResults = await page.evaluate(() => {
            return [...document.querySelectorAll('div.tF2Cxc')].map(el => ({
                title: el.querySelector('h3')?.innerText || '',
                link: el.querySelector('a')?.href || '',
                description: el.querySelector('.VwiC3b')?.innerText || ''
            }));
        });

        let commercialCount = 0;
        for (const result of searchResults) {
            if (!result.link) continue;

            try {
                const subPage = await browser.newPage();
                await subPage.goto(result.link, { waitUntil: 'domcontentloaded', timeout: 10000 });

                const pageContent = await subPage.evaluate(() => document.body.innerText.toLowerCase());

                const commercialKeywords = [
                    "–∫—É–ø–∏—Ç—å", "–∑–∞–∫–∞–∑–∞—Ç—å", "–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "—Ç–∞—Ä–∏—Ñ", "—Ü–µ–Ω–∞", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "–¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–Ω—ã", "–ø–æ–¥–∫–ª—é—á–∏—Ç—å", "–≤ –∫–æ—Ä–∑–∏–Ω—É", "–æ–ø–ª–∞—Ç–∏—Ç—å", "–ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥", "—É—Å–ª—É–≥–∞"
                ];

                const isCommercial = commercialKeywords.some(keyword => pageContent.includes(keyword)) ||
                    ["–∫–∞—Ç–∞–ª–æ–≥", "—É—Å–ª—É–≥–∞", "–ø—Ä–æ–¥—É–∫—Ç"].some(word => result.link.includes(word));

                if (isCommercial) commercialCount++;

                await subPage.close();
            } catch (error) {
                console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${result.link}`);
            }
        }

        const commercialRate = (commercialCount / 9) * 100;
        const category = commercialRate <= 40 ? "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π" :
            commercialRate < 60 ? "–ü–æ–ª—É–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π" : "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π";

        results.push({
            query,
            commercialPages: commercialCount,
            commercialRate: commercialRate.toFixed(2),
            category
        });

        console.log(`‚úÖ ${query}: ${commercialCount}/9 ‚Üí ${commercialRate.toFixed(2)}% (${category})`);
    }

    await csvWriter.writeRecords(results);
    console.log(`\nüìä –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ '${csvFilePath}'`);

    await browser.close();
})();
